{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/iankarkles/csv_files/blob/main/BigQuery_Job_Gold_produced_SellThru\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "id": "w6MmeBUBJ-9E"
      },
      "outputs": [],
      "source": [
        "# @title Setup\n",
        "from google.colab import auth\n",
        "from google.cloud import bigquery\n",
        "from google.colab import data_table\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "\n",
        "\n",
        "project = 'bigquery-analytics-workbench' # Project ID inserted based on the query results selected to explore\n",
        "location = 'EU' # Location inserted based on the query results selected to explore\n",
        "client = bigquery.Client(project=project, location=location)\n",
        "data_table.enable_dataframe_formatter()\n",
        "auth.authenticate_user()"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "pj42soltXW_H"
      },
      "source": [
        "## Reference SQL syntax from the original job\n",
        "Use the ```jobs.query```\n",
        "[method](https://cloud.google.com/bigquery/docs/reference/rest/v2/jobs/query) to\n",
        "return the SQL syntax from the job. This can be copied from the output cell\n",
        "below to edit the query now or in the future. Alternatively, you can use\n",
        "[this link](https://console.cloud.google.com/bigquery?j=bigquery-analytics-workbench:EU:bquxjob_2087e8f9_1855dbf4eda)\n",
        "back to BigQuery to edit the query within the BigQuery user interface."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KxSqPfAeXW_K"
      },
      "outputs": [],
      "source": [
        "# Running this code will display the query used to generate your previous job\n",
        "\n",
        "job = client.get_job('bquxjob_2087e8f9_1855dbf4eda') # Job ID inserted based on the query results selected to explore\n",
        "print(job.query)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "eY-wNOGO11ON"
      },
      "source": [
        "# Result set loaded from BigQuery job as a DataFrame\n",
        "Query results are referenced from the Job ID ran from BigQuery and the query\n",
        "does not need to be re-run to explore results. The ```to_dataframe```\n",
        "[method](https://googleapis.dev/python/bigquery/latest/generated/google.cloud.bigquery.job.QueryJob.html#google.cloud.bigquery.job.QueryJob.to_dataframe)\n",
        "downloads the results to a Pandas DataFrame by using the BigQuery Storage API.\n",
        "\n",
        "To edit query syntax, you can do so from the BigQuery SQL editor or in the\n",
        "```Optional:``` sections below."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "id": "bIw82qhuHWy0",
        "outputId": "d6db0052-c868-45cb-8563-8a306c5444ca",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 485
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Warning: total number of rows (145360) exceeds max_rows (20000). Falling back to pandas display.\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        month  year  gender                brand                family  \\\n",
              "0          12  2022   WOMEN    Cou Cou Intimates  Lingerie & Nightwear   \n",
              "1          12  2022  UNISEX                  MCM                  Bags   \n",
              "2          12  2022   WOMEN     PROENZA SCHOULER                  Bags   \n",
              "3          12  2022   WOMEN                  MCM                  Bags   \n",
              "4          12  2022   WOMEN             By Terry                Beauty   \n",
              "...       ...   ...     ...                  ...                   ...   \n",
              "145355      1  2022    KIDS       Moncler Enfant    Baby Girl Clothing   \n",
              "145356      1  2022   WOMEN    VIVIENNE WESTWOOD             Jewellery   \n",
              "145357      1  2022   WOMEN                FURLA                 Shoes   \n",
              "145358      1  2022    KIDS  Emporio Armani Kids      Boys Accessories   \n",
              "145359   <NA>  <NA>  UNISEX      Rolex Pre-Owned               Watches   \n",
              "\n",
              "               category is_produced_gold is_GBFC_gold  \\\n",
              "0       Briefs & Thongs                N            N   \n",
              "1             Belt Bags                N            N   \n",
              "2         Shoulder Bags                N            N   \n",
              "3             Tote Bags                N            N   \n",
              "4                Makeup                N            N   \n",
              "...                 ...              ...          ...   \n",
              "145355         Trousers                N            N   \n",
              "145356         Earrings                N            N   \n",
              "145357          Loafers                N            N   \n",
              "145358             Bags                N            N   \n",
              "145359     Fine Watches                N            N   \n",
              "\n",
              "                                                prod_gbfc  count_product  \\\n",
              "0       WOMEN Cou Cou Intimates Lingerie & Nightwear B...              8   \n",
              "1                               UNISEX MCM Bags Belt Bags              4   \n",
              "2               WOMEN PROENZA SCHOULER Bags Shoulder Bags              4   \n",
              "3                                WOMEN MCM Bags Tote Bags              3   \n",
              "4                            WOMEN By Terry Beauty Makeup              3   \n",
              "...                                                   ...            ...   \n",
              "145355    KIDS Moncler Enfant Baby Girl Clothing Trousers              1   \n",
              "145356         WOMEN VIVIENNE WESTWOOD Jewellery Earrings              1   \n",
              "145357                          WOMEN FURLA Shoes Loafers              1   \n",
              "145358     KIDS Emporio Armani Kids Boys Accessories Bags              1   \n",
              "145359        UNISEX Rolex Pre-Owned Watches Fine Watches              2   \n",
              "\n",
              "        availablestockunits  qtynetsalesunits  sellthru_rate  \n",
              "0                      7636               297       0.038895  \n",
              "1                      2217              1223       0.551646  \n",
              "2                       287                42       0.146341  \n",
              "3                       908               599       0.659692  \n",
              "4                        78                 4       0.051282  \n",
              "...                     ...               ...            ...  \n",
              "145355                  200                50       0.250000  \n",
              "145356                  345               105       0.304348  \n",
              "145357                  110                20       0.181818  \n",
              "145358                   50                10       0.200000  \n",
              "145359                    5                 0       0.000000  \n",
              "\n",
              "[145360 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2241befa-b41b-472a-8e60-6661c133ce84\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>gender</th>\n",
              "      <th>brand</th>\n",
              "      <th>family</th>\n",
              "      <th>category</th>\n",
              "      <th>is_produced_gold</th>\n",
              "      <th>is_GBFC_gold</th>\n",
              "      <th>prod_gbfc</th>\n",
              "      <th>count_product</th>\n",
              "      <th>availablestockunits</th>\n",
              "      <th>qtynetsalesunits</th>\n",
              "      <th>sellthru_rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>12</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>Cou Cou Intimates</td>\n",
              "      <td>Lingerie &amp; Nightwear</td>\n",
              "      <td>Briefs &amp; Thongs</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN Cou Cou Intimates Lingerie &amp; Nightwear B...</td>\n",
              "      <td>8</td>\n",
              "      <td>7636</td>\n",
              "      <td>297</td>\n",
              "      <td>0.038895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>12</td>\n",
              "      <td>2022</td>\n",
              "      <td>UNISEX</td>\n",
              "      <td>MCM</td>\n",
              "      <td>Bags</td>\n",
              "      <td>Belt Bags</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>UNISEX MCM Bags Belt Bags</td>\n",
              "      <td>4</td>\n",
              "      <td>2217</td>\n",
              "      <td>1223</td>\n",
              "      <td>0.551646</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>12</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>PROENZA SCHOULER</td>\n",
              "      <td>Bags</td>\n",
              "      <td>Shoulder Bags</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN PROENZA SCHOULER Bags Shoulder Bags</td>\n",
              "      <td>4</td>\n",
              "      <td>287</td>\n",
              "      <td>42</td>\n",
              "      <td>0.146341</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>12</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>MCM</td>\n",
              "      <td>Bags</td>\n",
              "      <td>Tote Bags</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN MCM Bags Tote Bags</td>\n",
              "      <td>3</td>\n",
              "      <td>908</td>\n",
              "      <td>599</td>\n",
              "      <td>0.659692</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>12</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>By Terry</td>\n",
              "      <td>Beauty</td>\n",
              "      <td>Makeup</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN By Terry Beauty Makeup</td>\n",
              "      <td>3</td>\n",
              "      <td>78</td>\n",
              "      <td>4</td>\n",
              "      <td>0.051282</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145355</th>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>KIDS</td>\n",
              "      <td>Moncler Enfant</td>\n",
              "      <td>Baby Girl Clothing</td>\n",
              "      <td>Trousers</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>KIDS Moncler Enfant Baby Girl Clothing Trousers</td>\n",
              "      <td>1</td>\n",
              "      <td>200</td>\n",
              "      <td>50</td>\n",
              "      <td>0.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145356</th>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>VIVIENNE WESTWOOD</td>\n",
              "      <td>Jewellery</td>\n",
              "      <td>Earrings</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN VIVIENNE WESTWOOD Jewellery Earrings</td>\n",
              "      <td>1</td>\n",
              "      <td>345</td>\n",
              "      <td>105</td>\n",
              "      <td>0.304348</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145357</th>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>WOMEN</td>\n",
              "      <td>FURLA</td>\n",
              "      <td>Shoes</td>\n",
              "      <td>Loafers</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>WOMEN FURLA Shoes Loafers</td>\n",
              "      <td>1</td>\n",
              "      <td>110</td>\n",
              "      <td>20</td>\n",
              "      <td>0.181818</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145358</th>\n",
              "      <td>1</td>\n",
              "      <td>2022</td>\n",
              "      <td>KIDS</td>\n",
              "      <td>Emporio Armani Kids</td>\n",
              "      <td>Boys Accessories</td>\n",
              "      <td>Bags</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>KIDS Emporio Armani Kids Boys Accessories Bags</td>\n",
              "      <td>1</td>\n",
              "      <td>50</td>\n",
              "      <td>10</td>\n",
              "      <td>0.200000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>145359</th>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>&lt;NA&gt;</td>\n",
              "      <td>UNISEX</td>\n",
              "      <td>Rolex Pre-Owned</td>\n",
              "      <td>Watches</td>\n",
              "      <td>Fine Watches</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>UNISEX Rolex Pre-Owned Watches Fine Watches</td>\n",
              "      <td>2</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>145360 rows × 13 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2241befa-b41b-472a-8e60-6661c133ce84')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2241befa-b41b-472a-8e60-6661c133ce84 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2241befa-b41b-472a-8e60-6661c133ce84');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 3
        }
      ],
      "source": [
        "# Running this code will read results from your previous job\n",
        "\n",
        "job = client.get_job('bquxjob_2087e8f9_1855dbf4eda') # Job ID inserted based on the query results selected to explore\n",
        "results = job.to_dataframe()\n",
        "results"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "84Ub57pbB6EN"
      },
      "source": [
        "## Show descriptive statistics using describe()\n",
        "Use the ```pandas DataFrame.describe()```\n",
        "[method](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.describe.html)\n",
        "to generate descriptive statistics. Descriptive statistics include those that\n",
        "summarize the central tendency, dispersion and shape of a dataset’s\n",
        "distribution, excluding ```NaN``` values. You may also use other Python methods\n",
        "to interact with your data."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "id": "fsAsHoWDZMpv",
        "outputId": "972d0abb-daaa-4e16-9913-3ca9143d95f7",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 262
        }
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "               month           year  count_product  availablestockunits  \\\n",
              "count  145359.000000  145359.000000  145360.000000         1.453600e+05   \n",
              "mean        6.789494    2021.832057       4.163608         7.877202e+02   \n",
              "std         3.357686       0.374368       7.464469         5.950300e+03   \n",
              "min         1.000000    2019.000000       1.000000         0.000000e+00   \n",
              "25%         4.000000    2022.000000       1.000000         3.500000e+01   \n",
              "50%         7.000000    2022.000000       2.000000         1.140000e+02   \n",
              "75%        10.000000    2022.000000       4.000000         4.000000e+02   \n",
              "max        12.000000    2022.000000     525.000000         1.182664e+06   \n",
              "\n",
              "       qtynetsalesunits  sellthru_rate  \n",
              "count     145360.000000  145360.000000  \n",
              "mean         149.622551       0.322979  \n",
              "std          710.789328       0.297964  \n",
              "min           -4.000000       0.000000  \n",
              "25%            5.000000       0.058824  \n",
              "50%           25.000000       0.250000  \n",
              "75%           95.000000       0.500000  \n",
              "max        99772.000000       1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a9ab03a1-e03b-420b-88b9-3ca46b08afac\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>month</th>\n",
              "      <th>year</th>\n",
              "      <th>count_product</th>\n",
              "      <th>availablestockunits</th>\n",
              "      <th>qtynetsalesunits</th>\n",
              "      <th>sellthru_rate</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>145359.000000</td>\n",
              "      <td>145359.000000</td>\n",
              "      <td>145360.000000</td>\n",
              "      <td>1.453600e+05</td>\n",
              "      <td>145360.000000</td>\n",
              "      <td>145360.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>6.789494</td>\n",
              "      <td>2021.832057</td>\n",
              "      <td>4.163608</td>\n",
              "      <td>7.877202e+02</td>\n",
              "      <td>149.622551</td>\n",
              "      <td>0.322979</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.357686</td>\n",
              "      <td>0.374368</td>\n",
              "      <td>7.464469</td>\n",
              "      <td>5.950300e+03</td>\n",
              "      <td>710.789328</td>\n",
              "      <td>0.297964</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>2019.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000e+00</td>\n",
              "      <td>-4.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>4.000000</td>\n",
              "      <td>2022.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>3.500000e+01</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>0.058824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>7.000000</td>\n",
              "      <td>2022.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>1.140000e+02</td>\n",
              "      <td>25.000000</td>\n",
              "      <td>0.250000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>10.000000</td>\n",
              "      <td>2022.000000</td>\n",
              "      <td>4.000000</td>\n",
              "      <td>4.000000e+02</td>\n",
              "      <td>95.000000</td>\n",
              "      <td>0.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>12.000000</td>\n",
              "      <td>2022.000000</td>\n",
              "      <td>525.000000</td>\n",
              "      <td>1.182664e+06</td>\n",
              "      <td>99772.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9ab03a1-e03b-420b-88b9-3ca46b08afac')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a9ab03a1-e03b-420b-88b9-3ca46b08afac button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a9ab03a1-e03b-420b-88b9-3ca46b08afac');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ],
            "application/vnd.google.colaboratory.module+javascript": "\n      import \"https://ssl.gstatic.com/colaboratory/data_table/fb998edc550c7947/data_table.js\";\n\n      window.createDataTable({\n        data: [[\"count\",\n{\n            'v': 145359.0,\n            'f': \"145359.0\",\n        },\n{\n            'v': 145359.0,\n            'f': \"145359.0\",\n        },\n{\n            'v': 145360.0,\n            'f': \"145360.0\",\n        },\n{\n            'v': 145360.0,\n            'f': \"145360.0\",\n        },\n{\n            'v': 145360.0,\n            'f': \"145360.0\",\n        },\n{\n            'v': 145360.0,\n            'f': \"145360.0\",\n        }],\n [\"mean\",\n{\n            'v': 6.789493598607585,\n            'f': \"6.789493598607585\",\n        },\n{\n            'v': 2021.8320571825618,\n            'f': \"2021.8320571825618\",\n        },\n{\n            'v': 4.163607594936709,\n            'f': \"4.163607594936709\",\n        },\n{\n            'v': 787.7202394056136,\n            'f': \"787.7202394056136\",\n        },\n{\n            'v': 149.62255090809026,\n            'f': \"149.62255090809026\",\n        },\n{\n            'v': 0.3229786058060701,\n            'f': \"0.3229786058060701\",\n        }],\n [\"std\",\n{\n            'v': 3.3576855779458956,\n            'f': \"3.3576855779458956\",\n        },\n{\n            'v': 0.37436848535216943,\n            'f': \"0.37436848535216943\",\n        },\n{\n            'v': 7.464468578286173,\n            'f': \"7.464468578286173\",\n        },\n{\n            'v': 5950.300487919973,\n            'f': \"5950.300487919973\",\n        },\n{\n            'v': 710.7893276698067,\n            'f': \"710.7893276698067\",\n        },\n{\n            'v': 0.2979637945255048,\n            'f': \"0.2979637945255048\",\n        }],\n [\"min\",\n{\n            'v': 1.0,\n            'f': \"1.0\",\n        },\n{\n            'v': 2019.0,\n            'f': \"2019.0\",\n        },\n{\n            'v': 1.0,\n            'f': \"1.0\",\n        },\n{\n            'v': 0.0,\n            'f': \"0.0\",\n        },\n{\n            'v': -4.0,\n            'f': \"-4.0\",\n        },\n{\n            'v': 0.0,\n            'f': \"0.0\",\n        }],\n [\"25%\",\n{\n            'v': 4.0,\n            'f': \"4.0\",\n        },\n{\n            'v': 2022.0,\n            'f': \"2022.0\",\n        },\n{\n            'v': 1.0,\n            'f': \"1.0\",\n        },\n{\n            'v': 35.0,\n            'f': \"35.0\",\n        },\n{\n            'v': 5.0,\n            'f': \"5.0\",\n        },\n{\n            'v': 0.058823529411764705,\n            'f': \"0.058823529411764705\",\n        }],\n [\"50%\",\n{\n            'v': 7.0,\n            'f': \"7.0\",\n        },\n{\n            'v': 2022.0,\n            'f': \"2022.0\",\n        },\n{\n            'v': 2.0,\n            'f': \"2.0\",\n        },\n{\n            'v': 114.0,\n            'f': \"114.0\",\n        },\n{\n            'v': 25.0,\n            'f': \"25.0\",\n        },\n{\n            'v': 0.25,\n            'f': \"0.25\",\n        }],\n [\"75%\",\n{\n            'v': 10.0,\n            'f': \"10.0\",\n        },\n{\n            'v': 2022.0,\n            'f': \"2022.0\",\n        },\n{\n            'v': 4.0,\n            'f': \"4.0\",\n        },\n{\n            'v': 400.0,\n            'f': \"400.0\",\n        },\n{\n            'v': 95.0,\n            'f': \"95.0\",\n        },\n{\n            'v': 0.5,\n            'f': \"0.5\",\n        }],\n [\"max\",\n{\n            'v': 12.0,\n            'f': \"12.0\",\n        },\n{\n            'v': 2022.0,\n            'f': \"2022.0\",\n        },\n{\n            'v': 525.0,\n            'f': \"525.0\",\n        },\n{\n            'v': 1182664.0,\n            'f': \"1182664.0\",\n        },\n{\n            'v': 99772.0,\n            'f': \"99772.0\",\n        },\n{\n            'v': 1.0,\n            'f': \"1.0\",\n        }]],\n        columns: [[\"string\", \"index\"], [\"number\", \"month\"], [\"number\", \"year\"], [\"number\", \"count_product\"], [\"number\", \"availablestockunits\"], [\"number\", \"qtynetsalesunits\"], [\"number\", \"sellthru_rate\"]],\n        columnOptions: [{\"width\": \"1px\", \"className\": \"index_column\"}],\n        rowsPerPage: 25,\n        helpUrl: \"https://colab.research.google.com/notebooks/data_table.ipynb\",\n        suppressOutputScrolling: true,\n        minimumWidth: undefined,\n      });\n    "
          },
          "metadata": {},
          "execution_count": 4
        }
      ],
      "source": [
        "results.describe()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "filtered_results = results[(results['family'] == 'Bags') & (results['month'] == 6)] ### Filtered Results \n"
      ],
      "metadata": {
        "id": "seez1tmI3hIY"
      },
      "execution_count": 29,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pivot = pd.pivot_table(filtered_results, values=['count_product','sellthru_rate'], index=['is_produced_gold', 'is_GBFC_gold'],aggfunc={'count_product': np.sum,'sellthru_rate': np.mean})"
      ],
      "metadata": {
        "id": "pM4WVFl51x1g"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "pivot"
      ],
      "metadata": {
        "id": "In2TQ8fE2z5f",
        "outputId": "ee629b48-ffd7-4166-8c3c-6b5d5d86c444",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        }
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                               count_product  sellthru_rate\n",
              "is_produced_gold is_GBFC_gold                              \n",
              "N                N                      2621       0.340856\n",
              "                 Y                      1739       0.253150\n",
              "Y                N                       236       0.595896\n",
              "                 Y                       285       0.265380"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b0751a93-47d6-4a24-87b9-47018477d783\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>count_product</th>\n",
              "      <th>sellthru_rate</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>is_produced_gold</th>\n",
              "      <th>is_GBFC_gold</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">N</th>\n",
              "      <th>N</th>\n",
              "      <td>2621</td>\n",
              "      <td>0.340856</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Y</th>\n",
              "      <td>1739</td>\n",
              "      <td>0.253150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"2\" valign=\"top\">Y</th>\n",
              "      <th>N</th>\n",
              "      <td>236</td>\n",
              "      <td>0.595896</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Y</th>\n",
              "      <td>285</td>\n",
              "      <td>0.265380</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b0751a93-47d6-4a24-87b9-47018477d783')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b0751a93-47d6-4a24-87b9-47018477d783 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b0751a93-47d6-4a24-87b9-47018477d783');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "Xrv3TsM-21UG"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "cell_execution_strategy": "setup",
      "name": "BigQuery bquxjob_2087e8f9_1855dbf4eda",
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}